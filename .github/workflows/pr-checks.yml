name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '9'

jobs:
  # Quick validation for PRs
  validate:
    name: Quick Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create test environment
        run: |
          cat > .env.local << EOF
          NEXT_PUBLIC_SUPABASE_URL=https://test-project.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRlc3QtcHJvamVjdCIsInJvbGUiOiJhbm9uIiwiaWF0IjoxNjQwOTk1MjAwLCJleHAiOjE5NTY1NzEyMDB9.test-anon-key
          SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRlc3QtcHJvamVjdCIsInJvbGUiOiJzZXJ2aWNlX3JvbGUiLCJpYXQiOjE2NDA5OTUyMDAsImV4cCI6MTk1NjU3MTIwMH0.test-service-role-key
          EOF

      - name: Generate mock Supabase types
        run: |
          mkdir -p src/types
          echo "export type Database = {};" > src/types/supabase.ts

      - name: Run all checks
        run: pnpm run check-all

      - name: Build application
        run: pnpm run build

  # Check for breaking changes
  breaking-changes:
    name: Check Breaking Changes
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == 'main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for package.json changes
        run: |
          if git diff --name-only origin/main...HEAD | grep -q "package.json"; then
            echo "‚ö†Ô∏è package.json has been modified"
            echo "Please ensure backward compatibility"
            git diff origin/main...HEAD -- package.json
          fi

      - name: Check for environment variable changes
        run: |
          if git diff --name-only origin/main...HEAD | grep -q ".env.example"; then
            echo "‚ö†Ô∏è Environment variables have been modified"
            echo "Please update documentation and deployment configs"
            git diff origin/main...HEAD -- .env.example
          fi

  # PR size check
  pr-size:
    name: Check PR Size
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check PR size
        run: |
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }}...HEAD | wc -l)
          ADDED_LINES=$(git diff --numstat origin/${{ github.event.pull_request.base.ref }}...HEAD | awk '{sum += $1} END {print sum}')
          DELETED_LINES=$(git diff --numstat origin/${{ github.event.pull_request.base.ref }}...HEAD | awk '{sum += $2} END {print sum}')

          echo "üìä PR Statistics:"
          echo "Files changed: $CHANGED_FILES"
          echo "Lines added: $ADDED_LINES"
          echo "Lines deleted: $DELETED_LINES"

          if [ "$CHANGED_FILES" -gt 50 ]; then
            echo "‚ö†Ô∏è This PR changes more than 50 files. Consider breaking it into smaller PRs."
          fi

          if [ "$ADDED_LINES" -gt 1000 ]; then
            echo "‚ö†Ô∏è This PR adds more than 1000 lines. Consider breaking it into smaller PRs."
          fi
